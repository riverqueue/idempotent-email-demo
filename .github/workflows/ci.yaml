name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    env:
      TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/river_test

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"

      - name: Display Go version
        run: go version

      - name: Set up database
        run: |
          psql -c "CREATE DATABASE river_test" postgres://postgres:postgres@localhost:5432
          go run github.com/riverqueue/river/cmd/river@latest migrate-up --database-url "$TEST_DATABASE_URL"

      - name: Test
        run: make test
        env:
          SMTP_HOST: example.com:1234
          SMTP_PASS: not-a-pass
          SMTP_USER: not-a-user

  golangci-lint:
    runs-on: ubuntu-latest
    env:
      GOLANGCI_LINT_VERSION: v1.64.6

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
